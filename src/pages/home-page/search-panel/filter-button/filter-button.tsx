import React, { useState } from 'react';

import s from './filter-button.module.scss';


export const FilterButton:React.FC<FilterButtonType> = ({toggleRatingSort}) => {

  const [isRatingUp, setIsRatingUp] = useState(false);

  const toggleRating = ()=> {
      setIsRatingUp(!isRatingUp)
  }

  return (
    <div className={s.filterButton}>
        <div role='presentation' data-test-id='sort-rating-button' className={s.container} onClick={()=> {
            toggleRating()
            toggleRatingSort()
        }}>

            {isRatingUp ?  <svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <path fillRule="evenodd" clipRule="evenodd" d="M11.1464 2.64645C11.1944 2.59851 11.2496 2.56234 11.3086 2.53794L11.8535 2.64642L11.854 2.64691L14.3535 5.14598C14.5487 5.34123 14.5488 5.65781 14.3535 5.85309C14.1583 6.04837 13.8417 6.04839 13.6464 5.85314L12 4.20698V9C12 9.27614 11.7761 9.5 11.5 9.5C11.2239 9.5 11 9.27614 11 9V4.20711L9.35355 5.85355C9.15829 6.04882 8.84171 6.04882 8.64645 5.85355C8.45118 5.65829 8.45118 5.34171 8.64645 5.14645L11.1464 2.64645ZM11.3086 2.53794L11.8514 2.64432C11.7611 2.55509 11.637 2.5 11.5 2.5C11.4322 2.5 11.3676 2.51349 11.3086 2.53794ZM3 7.5C2.72386 7.5 2.5 7.72386 2.5 8C2.5 8.27614 2.72386 8.5 3 8.5H7.49994C7.77608 8.5 7.99994 8.27614 7.99994 8C7.99994 7.72386 7.77608 7.5 7.49994 7.5H3ZM2.5 4C2.5 3.72386 2.72386 3.5 3 3.5H6.49994C6.77608 3.5 6.99994 3.72386 6.99994 4C6.99994 4.27614 6.77608 4.5 6.49994 4.5H3C2.72386 4.5 2.5 4.27614 2.5 4ZM3 11.5C2.72386 11.5 2.5 11.7239 2.5 12C2.5 12.2761 2.72386 12.5 3 12.5H11.4999C11.7761 12.5 11.9999 12.2761 11.9999 12C11.9999 11.7239 11.7761 11.5 11.4999 11.5H3Z" fill="#A7A7A7"/>
                </svg>
           :  <svg width='13' height='11' viewBox='0 0 13 11' fill='none' xmlns='http://www.w3.org/2000/svg'>
                    <path
                        fillRule='evenodd'
                        clipRule='evenodd'
                        d='M0.5 1C0.5 0.723858 0.723858 0.5 1 0.5H9.49994C9.77608 0.5 9.99994 0.723858 9.99994 1C9.99994 1.27614 9.77608 1.5 9.49994 1.5H1C0.723858 1.5 0.5 1.27614 0.5 1ZM9.5 3.5C9.77614 3.5 10 3.72386 10 4V8.793L11.6464 7.1468C11.8417 6.95155 12.1583 6.95157 12.3535 7.14684C12.5488 7.34212 12.5487 7.6587 12.3535 7.85395L9.85362 10.3535L9.85353 10.3536C9.76305 10.444 9.63806 10.5 9.5 10.5L9.49698 10.5C9.43029 10.4996 9.36668 10.4861 9.30861 10.4621C9.24963 10.4377 9.19438 10.4015 9.14645 10.3536L6.64645 7.85355C6.45118 7.65829 6.45118 7.34171 6.64645 7.14645C6.84171 6.95118 7.15829 6.95118 7.35355 7.14645L9 8.79289V4C9 3.72386 9.22386 3.5 9.5 3.5ZM1 4.5C0.723858 4.5 0.5 4.72386 0.5 5C0.5 5.27614 0.723858 5.5 1 5.5H5.49994C5.77608 5.5 5.99994 5.27614 5.99994 5C5.99994 4.72386 5.77608 4.5 5.49994 4.5H1ZM1 8.5C0.723858 8.5 0.5 8.72386 0.5 9C0.5 9.27614 0.723858 9.5 1 9.5H4.5C4.77614 9.5 5 9.27614 5 9C5 8.72386 4.77614 8.5 4.5 8.5H1Z'
                        fill='#A7A7A7'
                    />
                </svg>
           }

            <p className={s.filterName}>По рейтингу</p>
      </div>
    </div>
  );
};

type FilterButtonType = {
    toggleRatingSort: ()=> void
}


